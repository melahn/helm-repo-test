# 
# This workflow will create a helm charts repo and make it available publicly for test purposes.
# 
# To use the repo add the following to your helm repo list as follows ...
#   helm repo add melahn https://melahn.github.io/helm-repo-test
#
name: Create Helm Repository

# Controls when the workflow will run
on:
  # Triggers the workflow manually
  workflow_dispatch:
    inputs:
      tags:
        description: 'Deploy a Fresh Helm Repository'

jobs:
  # This workflow contains a single job called "build-helm-repo"
  build-helm-repo:
    runs-on: ubuntu-latest
    steps:
      # Checks-out the repo using v3
      - uses: actions/checkout@v3

      # Install helm
      - name: Helm tool installer
        uses: Azure/setup-helm@v1

      # Create the charts
      - name: Create the charts
        run: |
          mkdir charts
          # app-a has 1 version
          helm create charts/test-app-a
          # app-b has 2 versions
          helm create charts/test-app-b
          helm create charts/test-app-b2
          sed -i 's/0.1.0/0.2.0/g' charts/test-app-b2/Chart.yaml
          sed -i 's/test-app-b2/test-app-b/g' charts/test-app-b2/Chart.yaml
          # app-c has 3 versions
          helm create charts/test-app-c
          helm create charts/test-app-c2
          sed -i 's/0.1.0/0.2.0/g' charts/test-app-c2/Chart.yaml
          sed -i 's/test-app-c2/test-app-c/g' charts/test-app-c2/Chart.yaml
          helm create charts/test-app-c3
          sed -i 's/0.1.0/0.3.0/g' charts/test-app-c3/Chart.yaml
          sed -i 's/test-app-c3/test-app-c/g' charts/test-app-c3/Chart.yaml
          # create a chart with a dynamic dependency that will be found in a helm repo
          helm create charts/test-app-d
          echo "dependencies:" >> charts/test-app-d/Chart.yaml
          echo "- name: test-app-e" >> charts/test-app-d/Chart.yaml
          echo "  repository: \"\"" >> charts/test-app-d/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-d/Chart.yaml
          cd charts/test-app-d
          helm create charts/test-app-e
          echo "dependencies:" >> charts/test-app-e/Chart.yaml
          echo "- name: test-app-f" >> charts/test-app-e/Chart.yaml
          echo "  repository: \"\"" >> charts/test-app-e/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-e/Chart.yaml
          cd charts/test-app-e
          helm create charts/test-app-f
          echo "dependencies:" >> charts/test-app-f/Chart.yaml
          echo "- name: test-app-x" >> charts/test-app-f/Chart.yaml
          echo "  repository: https://melahn.github.io/helm-repo" >> charts/test-app-f/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-f/Chart.yaml
          cd ../../../..
          # create a chart with a dynamic dependency that will not be found in a helm repo
          helm create charts/test-app-g
          echo "dependencies:" >> charts/test-app-g/Chart.yaml
          echo "- name: test-app-h" >> charts/test-app-g/Chart.yaml
          echo "  repository: \"\"" >> charts/test-app-g/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-g/Chart.yaml
          cd charts/test-app-g
          helm create charts/test-app-h
          echo "dependencies:" >> charts/test-app-h/Chart.yaml
          echo "- name: test-app-i" >> charts/test-app-h/Chart.yaml
          echo "  repository: \"\"" >> charts/test-app-h/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-h/Chart.yaml
          cd charts/test-app-h
          helm create charts/test-app-i
          echo "dependencies:" >> charts/test-app-i/Chart.yaml
          echo "- name: no-chart-here" >> charts/test-app-i/Chart.yaml
          echo "  repository: https://melahn.github.io/helm-repo" >> charts/test-app-i/Chart.yaml
          echo "  version: 0.1.0" >> charts/test-app-i/Chart.yaml
          cd ../../../..
          # add the icon field that lint likes
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-a/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-b/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-b2/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-c/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-c2/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-c3/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-d/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-d/charts/test-app-e/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-d/charts/test-app-e/charts/test-app-f/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-g/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-g/charts/test-app-h/Chart.yaml
          echo "icon: \"https://helm.sh/img/helm.svg\"" >> charts/test-app-g/charts/test-app-h/charts/test-app-i/Chart.yaml
          # lint the resulting modified charts
          helm lint charts/test-app-a
          helm lint charts/test-app-b
          helm lint charts/test-app-b2
          helm lint charts/test-app-c
          helm lint charts/test-app-c2
          helm lint charts/test-app-c3
          helm lint charts/test-app-d
          helm lint charts/test-app-d/charts/test-app-e
          # Expect a lint warning on test-app-f and test-app-i since they each contain
          # a dynamic dependency.
          #
          # In the case of test-app-f, the dependency exists in a helm repo and
          # can be successfully used with a helm dependency update.
          #
          # In the case of test-app-i, the dependency does not exists in a helm repo and
          # so it wil fail when used even with a helm dependency update.
          helm lint charts/test-app-d/charts/test-app-e/charts/test-app-f
          helm lint charts/test-app-g
          helm lint charts/test-app-g/charts/test-app-h
          helm lint charts/test-app-g/charts/test-app-h/charts/test-app-i
      # Package the charts
      - name: Package the charts
        run: |
          helm package charts/test-app-a
          helm package charts/test-app-b1
          helm package charts/test-app-b2
          helm package charts/test-app-c
          helm package charts/test-app-c2
          helm package charts/test-app-c3
          # test-app-d and test-app-g each contain a dynamic chart reference so we
          # can't use the helm package command. Instead we create the
          # compressed archive ourselves
          cd charts
          tar -czf test-app-d-0.1.0.tgz test-app-d
          mv test-app-d-0.1.0.tgz ..
          tar -czf test-app-g-0.1.0.tgz test-app-g
          mv test-app-g-0.1.0.tgz ..
      # Create the index
      - name: Create the index
        run: |
          helm repo index --url https://melahn.github.io/helm-repo-test .
          cat index.yaml
      # Commit to git
      - name: Commit to git
        run: |
          rm -rf charts
          if [[ `git status --porcelain` ]]; then
              git config --global user.email "melahn@github"
              git config --global user.name "GitHub Action (create-helm-repo.yml)"
              git add *.tgz
              git add index.yaml
              git commit -m "Helm Repository Updated from GitHub action create-helm-repo"
              git pull origin main
              git push origin main
          else
              echo no git changes found
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
